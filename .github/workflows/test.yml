name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: '0 6 1 * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    timeout-minutes: 20
    name: ${{ matrix.name }} (${{ matrix.os }}, ${{ matrix.python-version }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2019]
        python-version: [3.8, 3.9]
        tox_env: [py-orange-released]
        experimental: [false]
        name: [Released]
        include:
          - os: macos-12.0
            python-version: 3.8
            tox_env: py-orange-released
            experimental: true
            name: macos-12

          - os: ubuntu-20.04
            python-version: 3.9
            tox_env: py-orange-dask
            name: Dask
            experimental: false

          - os: windows-2019
            python-version: 3.8
            tox_env: py-orange-oldest
            experimental: false
            name: Oldest
          - os: macos-11
            python-version: 3.8
            tox_env: py-orange-oldest
            name: Oldest
            experimental: false
          - os: ubuntu-20.04
            python-version: 3.8
            tox_env: py-orange-oldest
            name: Oldest
            experimental: false

          - os: windows-2019
            python-version: 3.9
            tox_env: py-orange-latest
            experimental: false
            name: Latest
          - os: macos-11
            python-version: 3.9
            tox_env: py-orange-latest
            experimental: false
            name: Latest
          - os: ubuntu-20.04
            python-version: 3.9
            tox_env: py-orange-latest
            experimental: false
            name: Latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install linux system dependencies
        if: |
          matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 libegl1-mesa libxcb-shape0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox

      - name: Set environment variable
        # this step sets QT_QPA_PLATFORM env which is required on Ubuntu and
        # it is skipped on Windows - QLabel font issues
        if: runner.os != 'Windows'
        run: |
          echo "QT_QPA_PLATFORM=offscreen" >> $GITHUB_ENV

      - name: Test with Tox
        run: |
          tox -e ${{ matrix.tox_env }}
        env:
          # Raise deprecations as errors in our tests only when testing orange-oldest and orange-released.
          ORANGE_DEPRECATIONS_ERROR: "${{ matrix.tox_env != 'py-orange-latest' && '1' || '' }}"
          # Need this otherwise unittest installs a warning filter that overrides
          # our desire to have OrangeDeprecationWarnings raised
          PYTHONWARNINGS: module

      - name: Upload code coverage
        if: |
          matrix.python-version == '3.9' &&
          matrix.os == 'ubuntu-20.04' &&
          matrix.tox_env == 'py-orange-dask'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
